// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	context "context"
	dbUtil "kelarin/internal/utils/dbutil"

	mock "github.com/stretchr/testify/mock"

	types "kelarin/internal/types"
)

// ServiceFeedback is an autogenerated mock type for the ServiceFeedback type
type ServiceFeedback struct {
	mock.Mock
}

// CreateTx provides a mock function with given fields: ctx, tx, req
func (_m *ServiceFeedback) CreateTx(ctx context.Context, tx dbUtil.Tx, req types.ServiceFeedback) error {
	ret := _m.Called(ctx, tx, req)

	if len(ret) == 0 {
		panic("no return value specified for CreateTx")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, dbUtil.Tx, types.ServiceFeedback) error); ok {
		r0 = rf(ctx, tx, req)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewServiceFeedback creates a new instance of ServiceFeedback. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewServiceFeedback(t interface {
	mock.TestingT
	Cleanup(func())
}) *ServiceFeedback {
	mock := &ServiceFeedback{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
