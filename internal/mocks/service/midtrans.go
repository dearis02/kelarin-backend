// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	snap "github.com/midtrans/midtrans-go/snap"
)

// Midtrans is an autogenerated mock type for the Midtrans type
type Midtrans struct {
	mock.Mock
}

// CreateTransaction provides a mock function with given fields: ctx, req
func (_m *Midtrans) CreateTransaction(ctx context.Context, req *snap.Request) (*snap.Response, error) {
	ret := _m.Called(ctx, req)

	if len(ret) == 0 {
		panic("no return value specified for CreateTransaction")
	}

	var r0 *snap.Response
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *snap.Request) (*snap.Response, error)); ok {
		return rf(ctx, req)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *snap.Request) *snap.Response); ok {
		r0 = rf(ctx, req)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*snap.Response)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *snap.Request) error); ok {
		r1 = rf(ctx, req)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewMidtrans creates a new instance of Midtrans. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMidtrans(t interface {
	mock.TestingT
	Cleanup(func())
}) *Midtrans {
	mock := &Midtrans{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
