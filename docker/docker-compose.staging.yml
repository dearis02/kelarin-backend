services:
  postgres:
    image: postgis/postgis:17-3.5
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    logging:
      driver: loki
      options:
        loki-url: "http://127.0.0.1:3100/loki/api/v1/push"
        loki-external-labels: container_name={{.Name}},svc=postgres

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - 6378:6379
    volumes:
      - redis_data:/data
    restart: unless-stopped
    logging:
      driver: loki
      options:
        loki-url: "http://127.0.0.1:3100/loki/api/v1/push"
        loki-external-labels: container_name={{.Name}},svc=redis

  loki:
    image: grafana/loki:3.4.2
    container_name: loki
    ports:
      - 3100:3100
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki_data:/loki
    restart: unless-stopped

  api:
    image: ${DOCKERHUB_USERNAME}/${DOCKERHUB_REPO}:${IMAGE_TAG}
    ports:
      - 5000:${API_PORT}
    volumes:
      - ../config:/app/config
      - ../database:/app/database
    depends_on:
      postgres:
        condition: service_started
      redis:
        condition: service_started
      loki:
        condition: service_started
    logging:
      driver: loki
      options:
        loki-url: "http://127.0.0.1:3100/loki/api/v1/push"
        loki-external-labels: container_name={{.Name}},svc=svc-backend
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

volumes:
  es_data:
    driver: local
  pg_data:
    driver: local
  redis_data:
    driver: local
  loki_data:
    driver: local
